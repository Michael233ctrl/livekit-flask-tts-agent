version: '3.8'

services:
  agent:
    build:
      context: ./agent
      dockerfile: Dockerfile
    container_name: agent
    volumes:
      - ./agent:/app
    ports:
      - "7880:7880"
      - "7881:7881"
      - "7882:7882"
    env_file:
      - .env.local
    restart: unless-stopped
    networks:
      - livekit_voice_pipeline

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    depends_on:
      - agent
    restart: unless-stopped
  
  audio_server:
    build: ./audio_server
    container_name: audio_server
    volumes:
      - ./audio_server:/app
    ports:
      - "5000:5000"
    restart: unless-stopped
    env_file:
      - .env.local
    depends_on:
      - agent
      - frontend
    networks:
      - livekit_voice_pipeline

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    container_name: ngrok_tunnel
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
      - "--authtoken=${NGROK_AUTHTOKEN}" 
    volumes:
      - ./ngrok/ngrok.yml:/etc/ngrok.yml
    networks:
      - livekit_voice_pipeline
    ports:
      - 4040:4040
    environment: 
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - audio_server
  
networks:
  livekit_voice_pipeline:
    driver: bridge
